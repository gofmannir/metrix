[project]
name = "metrix"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "loguru>=0.7.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/metrix"]

[dependency-groups]
dev = [
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-httpserver>=1.1.3",
    "pytest-mock>=3.15.1",
    "pytest-recording>=0.13.4",
    "pytest-timeout>=2.4.0",
    "ruff>=0.14.0",
]

[tool.ruff]
line-length = 120
target-version = "py313"
select = ["E", "F", "W", "I", "N", "UP", "ANN", "B", "A", "COM", "C4", "DTZ", "T10", "ISC", "ICN", "G", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["ANN401", "COM812", "ISC001"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.pytest.ini_options]
addopts = [
    "--cov",
    "--cov-report=term",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-branch",
    "--junitxml=build/pytest-junitxml.xml",

    # # logging output for debugging
    # "--capture=no",
    # "--log-cli-level=DEBUG",
    # "--log-cli-format=%(asctime)s [%(levelname)8s] %(name)s: %(message)s",
    # "--log-cli-date-format=%H:%M:%S",
]
cache_dir = "build/.pytest_cache"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
source = ["src"]
data_file = "build/.coverage"
omit = [
    "**/tests/*",
    ".venv/*",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
#fail_under = 70  # Minimum coverage threshold

[tool.coverage.html]
directory = "build/coverage_html"

[tool.coverage.xml]
output = "build/coverage.xml"
